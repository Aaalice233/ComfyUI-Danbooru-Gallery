/**
 * Character Feature Swap 翻译字典
 * Character Feature Swap Translations
 */

export const charSwapTranslations = {
    zh: {
        language: "语言",
        prompt: "提示词",
        llm: "LLM",
        languageSettings: "语言设置",
        promptSettings: "提示词设置",
        customPrompt: "自定义AI提示词 (Custom Prompt):",
        promptPlaceholder: "使用 <code>{original_prompt}</code>、<code>{character_prompt}</code> 和 <code>{target_features}</code> 作为占位符。",
        llmSettings: "LLM 设置",
        llmDescription: `配置用于特征替换的LLM API。推荐使用 <a href="https://openrouter.ai" target="_blank">OpenRouter</a> (部分模型免费)。`,
        channel: "渠道:",
        apiUrl: "API URL:",
        apiKey: "API Key:",
        model: "模型 (Model):",
        search: "搜索...",
        save: "保存",
        close: "关闭",
        settingsSaved: "设置已保存！",
        saveFailed: "保存失败: ",
        testConnection: "测试连接",
        getModels: "获取模型列表",
        testResponse: "测试回复",
        testing: "测试中...",
        connectionSuccess: "连接成功！",
        connectionFailed: "连接失败: ",
        responseSuccess: "回复成功: ",
        responseFailed: "回复失败: ",
        import: "导入",
        export: "导出",
        debug: "调试",
        settings: "设置",
        addTagPlaceholder: "输入后按回车...",
        apiKeyMissingWarning: '警告: 未设置API Key。请在"设置"中配置。',
        connectionFailedWarning: "连接失败。请检查设置和网络。",
        checkingConnection: "正在检查连接...",
        exportSuccess: "设置已成功导出！",
        exportFailed: "导出失败。",
        importSuccess: "设置已成功导入！",
        importError: "导入设置失败，文件格式无效或已损坏。",
        presets: "预设",
        managePresets: "管理预设",
        addPreset: "添加预设",
        presetName: "预设名称...",
        savePreset: "保存当前标签为预设",
        deletePresetConfirmation: "确定要删除预设 '{presetName}' 吗？此操作无法撤销。",
        presetNameExists: "预设名称已存在。",
        presetDeleted: "预设已删除。",
        presetSaved: "预设已保存。",
        saveCurrentPreset: "保存到当前预set",
        saveAsPreset: "另存为新预设",
        loadingModels: "正在加载模型...",
        selectModel: "选择一个模型",
        errorLoadingModels: "加载模型失败",
        modelsRefreshed: "模型列表已刷新！",
        timeout: "超时 (秒)",
        timeoutHint: "LLM API请求的等待时间。",
        helpTitle: "功能说明",
        helpIntro: "此区域用于选择需要进行特征融合的'特征类别'。",
        helpWorkflowTitle: "工作流程：",
        helpWorkflowStep1: "1. 节点会从'original_prompt'中寻找并移除与所选类别相关的标签。",
        helpWorkflowStep2: "2. 同时，节点会将'character_prompt'中与这些类别相关的标签提取出来。",
        helpWorkflowStep3: "3. 最后，将提取出的特征标签与处理过的'original_prompt'合并，生成'new_prompt'。",
        helpExampleTitle: "示例：",
        helpExampleCategories: "- 选择的特征类别: [hair style], [eye color], [clothing]",
        helpExampleResult: "- 结果 (new_prompt): 1girl, solo, smile, short hair, green eyes, armor",
        importTooltip: "导入设置和预设 (.json)",
        exportTooltip: "导出设置和预设 (.json)",
        debugTooltip: "查看发送给LLM的最终提示词以进行调试",
        settingsTooltip: "打开LLM、提示词和语言设置",
        presetsTooltip: "管理和切换特征预设",
        helpTooltip: "显示此节点的功能说明",
        addTagTooltip: "添加一个新的特征类别",
    },
    en: {
        language: "Language",
        prompt: "Prompt",
        llm: "LLM",
        languageSettings: "Language Settings",
        promptSettings: "Prompt Settings",
        customPrompt: "Custom AI Prompt:",
        promptPlaceholder: "Use <code>{original_prompt}</code>, <code>{character_prompt}</code>, and <code>{target_features}</code> as placeholders.",
        llmSettings: "LLM Settings",
        llmDescription: `Configure the LLM API for feature swapping. <a href="https://openrouter.ai" target="_blank">OpenRouter</a> is recommended (Some models are free).`,
        channel: "Channel:",
        apiUrl: "API URL:",
        apiKey: "API Key:",
        model: "Model:",
        search: "Search...",
        save: "Save",
        close: "Close",
        settingsSaved: "Settings saved!",
        saveFailed: "Save failed: ",
        testConnection: "Test Connection",
        getModels: "Get Models",
        testResponse: "Test Response",
        testing: "Testing...",
        connectionSuccess: "Connection successful!",
        connectionFailed: "Connection failed: ",
        responseSuccess: "Response successful: ",
        responseFailed: "Response failed: ",
        import: "Import",
        export: "Export",
        debug: "Debug",
        settings: "Settings",
        addTagPlaceholder: "Enter to add...",
        apiKeyMissingWarning: "Warning: API Key is not set. Please configure in Settings.",
        connectionFailedWarning: "Connection failed. Check settings and network.",
        checkingConnection: "Checking connection...",
        exportSuccess: "Settings exported successfully!",
        exportFailed: "Export failed.",
        importSuccess: "Settings imported successfully!",
        importError: "Failed to import settings. Invalid or corrupt file format.",
        presets: "Presets",
        managePresets: "Manage Presets",
        addPreset: "Add Preset",
        presetName: "Preset name...",
        savePreset: "Save current tags as preset",
        deletePresetConfirmation: "Are you sure you want to delete the preset '{presetName}'? This cannot be undone.",
        presetNameExists: "Preset name already exists.",
        presetDeleted: "Preset deleted.",
        presetSaved: "Preset saved.",
        saveCurrentPreset: "Save to Current Preset",
        saveAsPreset: "Save as New Preset",
        loadingModels: "Loading models...",
        selectModel: "Select a model",
        errorLoadingModels: "Error loading models",
        modelsRefreshed: "Model list refreshed!",
        timeout: "Timeout (s)",
        timeoutHint: "Time to wait for the LLM API request.",
        helpTitle: "Feature Description",
        helpIntro: "This area is for selecting 'feature categories' for feature merging.",
        helpWorkflowTitle: "Workflow:",
        helpWorkflowStep1: "1. The node finds and removes tags related to the selected categories from the 'original_prompt'.",
        helpWorkflowStep2: "2. Simultaneously, the node extracts tags related to these categories from the 'character_prompt'.",
        helpWorkflowStep3: "3. Finally, it merges the extracted feature tags with the processed 'original_prompt' to generate the 'new_prompt'.",
        helpExampleTitle: "Example:",
        helpExampleCategories: "- Selected Feature Categories: [hair style], [eye color], [clothing]",
        helpExampleResult: "- Result (new_prompt): 1girl, solo, smile, short hair, green eyes, armor",
        importTooltip: "Import settings and presets (.json)",
        exportTooltip: "Export settings and presets (.json)",
        debugTooltip: "View the final prompt sent to the LLM for debugging",
        settingsTooltip: "Open LLM, prompt, and language settings",
        presetsTooltip: "Manage and switch feature presets",
        helpTooltip: "Show the feature description for this node",
        addTagTooltip: "Add a new feature category",
    }
};

